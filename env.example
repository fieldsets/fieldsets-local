#!/usr/bin/env bash
# Copy this file to .env in this directory. These are all default values (unless specified in an adjacent comment otherwise) and will be set even if not defined in .env

# Fieldsets Version. Version Numbering TBD.
VERSION="latest"
ENVIRONMENT="dev-local"
CONTAINER_REGISTRY="fieldsets" # Can set to DNS of registry host

# Set these to false on production to enable only pipeline events to the log
DEBUG_MODE="true"
LOGGING_ENABLED="false"

# Local user ids to manage permissions
# Use `id -u` and `id -g` on a mac

LOCAL_UID=1000
LOCAL_GID=1000

# Valid Time Zone strings found here https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TIMEZONE=America/New_York

# Fieldsets Local Network Configuration
FIELDSETS_LOCAL_SRC_PATH=./src/
FIELDSETS_LOCAL_CONFIG_PATH=./
FIELDSETS_LOCAL_HOST=172.28.0.6
FIELDSETS_LOCAL_NETWORK_SUBNET=172.28.0.0/24

# Set to true if you'd like to connect to the container CLI. Otherwise the container will exit upon command completeion.
# Set to true if you'd like to use this as a local work environment.
ENABLE_TERMINAL="true"

# Event Logger
EVENT_LOGGER_HOST="172.28.0.2"
EVENT_LOGGER_PORT="24224"

#####
# FIELDSETS_LOCAL REMOTE DATA SOURCES
#   For Working locally, the below integrations have been setup as postgres foreign data servers
#   This works by setting up tunnels via a fieldsets jump server. As only one jump server is permitted with SSH_HOST, this means you cannot access staging and production servers simultaneously.
#   It is recommended to use a read only user account for the foreign data servers and copy any data you need into your local DB.
#   Your rsa key for trampoline defined below will be mounted into the container as /root/.ssh/id_rsa.
#####
SSH_KEY_PATH=~/.ssh/id_rsa
SSH_CONFIG_PATH=~/.ssh/config
SSH_HOST="" # Unset this variable to disable SSH Tunneling. (ie when utilizing this docker image on AWS)
SSH_PORT=22
SSH_USER=""

# Events Remote Server
EVENTS_USER=""
EVENTS_PASSWORD=""
EVENTS_HOST="172.28.0.7"
EVENTS_PORT=5432

# Only utilized if SSH_HOST is defined.
EVENTS_TUNNEL_PORT=5436

#####
# FIELDSETS DOCKER INTEGRATIONS
#   - The below variables represent variouse docker integrations that have been setup to run with fieldsets local, and can be added as submodules
#####

# https://github.com/Fieldsets/docker-postgres
# Postgres Container Vars
POSTGRES_VERSION=14
POSTGRES_CONFIG_PATH=./config/postgres/
POSTGRES_USER=postgres
POSTGRES_PASSWORD=fieldsets
POSTGRES_HOST="172.28.0.7"
POSTGRES_PORT=5432
POSTGRES_DB=fieldsets
# Predefined Roles for various PG tasks.
POSTGRES_READER_ROLE="bioinfo_reader"
POSTGRES_READER_ROLE_PASSWORD=""
POSTGRES_WRITER_ROLE="bioinfo_writer"
POSTGRES_WRITER_ROLE_PASSWORD=""
POSTGRES_TRIGGER_ROLE="bioinfo_trigger"
POSTGRES_TRIGGER_ROLE_PASSWORD=""


# https://github.com/Fieldsets/docker-clickhouse
# This is utilized in Fieldsets's ML infrastructure
# Clickhouse Container Vars
CLICKHOUSE_ENABLED: false # Disabled by default.
CLICKOUSE_VERSION=22
CLICKHOUSE_CONFIG_PATH=./config/clickhouse/
CLICKHOUSE_USER=default
CLICKHOUSE_PASSWORD=fieldsets
CLICKHOUSE_HOST=172.28.0.5
CLICKHOUSE_PORT=8123
CLICKHOUSE_DB=fieldsets

# If enabled, set up DB Sychronization Triggers. 
# Any write from the source schema will trigger inserts into identical tables of target schema.
# This is useful for writing data to an FDW after confirming results locally. Be careful with your write permissions.
ENABLE_DB_SYNC=false
DB_SYNC_SOURCE_SCHEMA=fieldsets
DB_SYNC_TARGET_SCHEMA=public # Will create schema if does not exist.
